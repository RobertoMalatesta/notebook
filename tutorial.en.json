{
	"setting": {
		"interpreter": "eval5",
		"typescript": false,
		"locked": false
	},
	"notebook": {
		"cell0": {
			"input": {
				"type": "markdown",
				"source": "### 武统台湾，留岛不留人\nWelcome to quantlib.js notebook\n[简体中文版介绍点这里](/notebook/#tutorial.cn.json)\n\nThis is a light weight `jupyter notebook` like web app for `interactive computation`, it's hosted on `github page`, after loading, it works offline."
			},
			"show_editor": false,
			"output": {
				"type": "html",
				"content": "<div id=\"ot0\"><h3 id=\"武统台湾，留岛不留人\">武统台湾，留岛不留人</h3>\n<p>Welcome to quantlib.js notebook\n<a target=\"_blank\" href=\"/notebook/#tutorial.cn.json\">简体中文版介绍点这里</a></p>\n<p>This is a light weight <code>jupyter notebook</code> like web app for <code>interactive computation</code>, it's hosted on <code>github page</code>, after loading, it works offline.</p>\n</div>"
			}
		},
		"cell33": {
			"input": {
				"type": "markdown",
				"source": "#### Guide"
			},
			"show_editor": false,
			"output": {
				"type": "html",
				"content": "<div id=\"ot33\"><h4 id=\"guide\">Guide</h4>\n</div>"
			}
		},
		"cell22": {
			"input": {
				"type": "markdown",
				"source": "##### Notebook Actions\nfrom top navbar:\n* click `quantlib.js` to refresh page with an empty notebook\n* click <i class=\"fa fa-plus\"></i> button to insert a new cell after selected cell\n* click <i class=\"fa fa-angle-double-up\"></i> run all cells above selected cell\n* click <i class=\"fa fa-angle-double-down\"></i> run selected cell and all cells below\n* click <i class=\"fa fa-forward\"></i> button to run entire notebook\n* click <i class=\"fa fa-close\"></i> button to clear all output, show all editors"
			},
			"show_editor": false,
			"output": {
				"type": "html",
				"content": "<div id=\"ot22\"><h5 id=\"notebook-actions\">Notebook Actions</h5>\n<p>from top navbar:</p>\n<ul>\n<li>click <code>quantlib.js</code> to refresh page with an empty notebook</li>\n<li>click <i class=\"fa fa-plus\"></i> button to insert a new cell after selected cell</li>\n<li>click <i class=\"fa fa-angle-double-up\"></i> run all cells above selected cell</li>\n<li>click <i class=\"fa fa-angle-double-down\"></i> run selected cell and all cells below</li>\n<li>click <i class=\"fa fa-forward\"></i> button to run entire notebook</li>\n<li>click <i class=\"fa fa-close\"></i> button to clear all output, show all editors</li>\n</ul>\n</div>"
			}
		},
		"cell21": {
			"input": {
				"type": "markdown",
				"source": "##### Cell Actions\nhover over cell:\n* click <i class=\"fa fa-code\"></i> or <i class=\"fa fa-sticky-note-o\"></i> to toggle cell type, it's either `code` or `markdown`\n* click <i class=\"fa fa-navicon\"></i> or <i class=\"fa fa-ellipsis-v\"></i> to show/hide editor\n* click <i class=\"fa fa-play\"></i> to run a cell\n* click <i class=\"fa fa-angle-up\"></i> to move a cell up\n* click <i class=\"fa fa-trash-o\"></i> to delete a cell\n* click <i class=\"fa fa-angle-down\"></i> to move a cell down"
			},
			"show_editor": false,
			"output": {
				"type": "html",
				"content": "<div id=\"ot21\"><h5 id=\"cell-actions\">Cell Actions</h5>\n<p>hover over cell:</p>\n<ul>\n<li>click <i class=\"fa fa-code\"></i> or <i class=\"fa fa-sticky-note-o\"></i> to toggle cell type, it's either <code>code</code> or <code>markdown</code></li>\n<li>click <i class=\"fa fa-navicon\"></i> or <i class=\"fa fa-ellipsis-v\"></i> to show/hide editor</li>\n<li>click <i class=\"fa fa-play\"></i> to run a cell</li>\n<li>click <i class=\"fa fa-angle-up\"></i> to move a cell up</li>\n<li>click <i class=\"fa fa-trash-o\"></i> to delete a cell</li>\n<li>click <i class=\"fa fa-angle-down\"></i> to move a cell down</li>\n</ul>\n</div>"
			}
		},
		"cell27": {
			"input": {
				"type": "markdown",
				"source": "##### Settings\n\n* toggle `Tri-state` checkbox to use `Next Cell` function, default is <i class=\"fa fa-minus-square-o\"></i>\n  * <i class=\"fa fa-minus-square-o\"></i> : after running a cell, select next cell\n  * <i class=\"fa fa-check-square-o\"></i> : after running a cell, select next cell and try to scroll it to top\n  * <i class=\"fa fa-square-o\"></i>: after running a cell, do not select or move to next cell\n* `Switch` <div class=\"custom-control custom-switch\"><input type=\"checkbox\" class=\"custom-control-input\" id=\"customswitch1\" checked><label class=\"custom-control-label\" for=\"customswitch1\"></label></div> to change interpreter, default is `eval5`. See `Code execution` below\n* click <i class=\"fa fa-lock\"></i> or <i class=\"fa fa-unlock-alt\"></i> to lock/unlock notebook\n* click <i class=\"fa fa-toggle-on\"></i> or <i class=\"fa fa-toggle-off\"></i> to toggle use of `typescript`, See `JavaScript vs TypeScript` below\n* click <i class=\"fa fa-columns\"></i> to show/hide table of content\n* click <i class=\"fa fa-adjust\"></i> button to toggle light/dark color theme"
			},
			"show_editor": false,
			"output": {
				"type": "html",
				"content": "<div id=\"ot27\"><h5 id=\"settings\">Settings</h5>\n<ul>\n<li>toggle <code>Tri-state</code> checkbox to use <code>Next Cell</code> function, default is <i class=\"fa fa-minus-square-o\"></i><ul>\n<li><i class=\"fa fa-minus-square-o\"></i> : after running a cell, select next cell</li>\n<li><i class=\"fa fa-check-square-o\"></i> : after running a cell, select next cell and try to scroll it to top</li>\n<li><i class=\"fa fa-square-o\"></i>: after running a cell, do not select or move to next cell</li>\n</ul>\n</li>\n<li><code>Switch</code> <div class=\"custom-control custom-switch\"><input type=\"checkbox\" class=\"custom-control-input\" id=\"customswitch1\" checked=\"\"><label class=\"custom-control-label\" for=\"customswitch1\"></label></div> to change interpreter, default is <code>eval5</code>. See <code>Code execution</code> below</li>\n<li>click <i class=\"fa fa-lock\"></i> or <i class=\"fa fa-unlock-alt\"></i> to lock/unlock notebook</li>\n<li>click <i class=\"fa fa-toggle-on\"></i> or <i class=\"fa fa-toggle-off\"></i> to toggle use of <code>typescript</code>, See <code>JavaScript vs TypeScript</code> below</li>\n<li>click <i class=\"fa fa-columns\"></i> to show/hide table of content</li>\n<li>click <i class=\"fa fa-adjust\"></i> button to toggle light/dark color theme</li>\n</ul>\n</div>"
			}
		},
		"cell32": {
			"input": {
				"type": "markdown",
				"source": "##### File I/O\n* click <i class=\"fa fa-download\"></i> to generate json file from current notebook and download to disk\n* use file name input to change download file name\n* click <i class=\"fa fa-upload\"></i> upload a notebook json file from disk to browser and display notebook\n* drag a notebook json file to this page can also upload to browser and display notebook"
			},
			"show_editor": false,
			"output": {
				"type": "html",
				"content": "<div id=\"ot32\"><h5 id=\"file-io\">File I/O</h5>\n<ul>\n<li>click <i class=\"fa fa-download\"></i> to generate json file from current notebook and download to disk</li>\n<li>use file name input to change download file name</li>\n<li>click <i class=\"fa fa-upload\"></i> upload a notebook json file from disk to browser and display notebook</li>\n<li>drag a notebook json file to this page can also upload to browser and display notebook</li>\n</ul>\n</div>"
			}
		},
		"cell26": {
			"input": {
				"type": "markdown",
				"source": "##### One time URL load\n* use `https://quantlib.js.org/notebook/#https://mydomain.com/link-to-notebook.json` to load notebook json file from a url, put your url after `#`, file name will be display in settings file name"
			},
			"show_editor": false,
			"output": {
				"type": "html",
				"content": "<div id=\"ot26\"><h5 id=\"one-time-url-load\">One time URL load</h5>\n<ul>\n<li>use <code>https://quantlib.js.org/notebook/#https://mydomain.com/link-to-notebook.json</code> to load notebook json file from a url, put your url after <code>#</code>, file name will be display in settings file name</li>\n</ul>\n</div>"
			}
		},
		"cell23": {
			"input": {
				"type": "markdown",
				"source": "##### Markdown with LaTex\n\nWe use \n\n* [marked](https://github.com/markedjs/marked) to render [GitHub Flavored Markdown](https://github.github.com/gfm/)\n\n* [katex](https://katex.org/) to render `LaTex`, example: $ c = \\pm\\sqrt{a^2 + b^2} $ (put latex inside `$$ ... $$ ` for display mode, `$ ... $` for inline mode); [Supported Functions](https://katex.org/docs/supported.html), [Support Table](https://katex.org/docs/support_table.html)\n\nMore Markdown tutorial can be found [here](/notebook/#markdown/tutorial.json)\n\nMore Latex tutorial can be found [here](/notebook/#latex/tutorial.json)"
			},
			"show_editor": false,
			"output": {
				"type": "html",
				"content": "<div id=\"ot23\"><h5 id=\"markdown-with-latex\">Markdown with LaTex</h5>\n<p>We use </p>\n<ul>\n<li><p><a target=\"_blank\" href=\"https://github.com/markedjs/marked\">marked</a> to render <a target=\"_blank\" href=\"https://github.github.com/gfm/\">GitHub Flavored Markdown</a></p>\n</li>\n<li><p><a target=\"_blank\" href=\"https://katex.org/\">katex</a> to render <code>LaTex</code>, example: <span><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>c</mi><mo>=</mo><mo>±</mo><msqrt><mrow><msup><mi>a</mi><mn>2</mn></msup><mo>+</mo><msup><mi>b</mi><mn>2</mn></msup></mrow></msqrt></mrow><annotation encoding=\"application/x-tex\"> c = \\pm\\sqrt{a^2 + b^2} </annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height: 0.43056em; vertical-align: 0em;\"></span><span class=\"mord mathdefault\">c</span><span class=\"mspace\" style=\"margin-right: 0.277778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right: 0.277778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height: 1.04em; vertical-align: -0.126611em;\"></span><span class=\"mord\">±</span><span class=\"mord sqrt\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height: 0.913389em;\"><span class=\"svg-align\" style=\"top: -3em;\"><span class=\"pstrut\" style=\"height: 3em;\"></span><span class=\"mord\" style=\"padding-left: 0.833em;\"><span class=\"mord\"><span class=\"mord mathdefault\">a</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height: 0.740108em;\"><span class=\"\" style=\"top: -2.989em; margin-right: 0.05em;\"><span class=\"pstrut\" style=\"height: 2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right: 0.222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right: 0.222222em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">b</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height: 0.740108em;\"><span class=\"\" style=\"top: -2.989em; margin-right: 0.05em;\"><span class=\"pstrut\" style=\"height: 2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span></span></span><span class=\"\" style=\"top: -2.87339em;\"><span class=\"pstrut\" style=\"height: 3em;\"></span><span class=\"hide-tail\" style=\"min-width: 0.853em; height: 1.08em;\"><svg width=\"400em\" height=\"1.08em\" viewBox=\"0 0 400000 1080\" preserveAspectRatio=\"xMinYMin slice\"><path d=\"M95,702\nc-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,-10,-9.5,-14\nc0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54\nc44.2,-33.3,65.8,-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10\ns173,378,173,378c0.7,0,35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429\nc69,-144,104.5,-217.7,106.5,-221\nl0 -0\nc5.3,-9.3,12,-14,20,-14\nH400000v40H845.2724\ns-225.272,467,-225.272,467s-235,486,-235,486c-2.7,4.7,-9,7,-19,7\nc-6,0,-10,-1,-12,-3s-194,-422,-194,-422s-65,47,-65,47z\nM834 80h400000v40h-400000z\"></path></svg></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height: 0.126611em;\"><span class=\"\"></span></span></span></span></span></span></span></span></span> (put latex inside <code>$$ ... $$</code> for display mode, <code>$ ... $</code> for inline mode); <a target=\"_blank\" href=\"https://katex.org/docs/supported.html\">Supported Functions</a>, <a target=\"_blank\" href=\"https://katex.org/docs/support_table.html\">Support Table</a></p>\n</li>\n</ul>\n<p>More Markdown tutorial can be found <a target=\"_blank\" href=\"/notebook/#markdown/tutorial.json\">here</a></p>\n<p>More Latex tutorial can be found <a target=\"_blank\" href=\"/notebook/#latex/tutorial.json\">here</a></p>\n</div>"
			}
		},
		"cell25": {
			"input": {
				"type": "markdown",
				"source": "##### LaTex protection\n\nLaTeX content may contain text that could be interpreted as Markdown, e.g., `$ {a}_{1} {a}_{2} $`\n\nThose are protected and rendered as LaTeX $ {a}_{1} {a}_{2} $ instead of Markdown {a}_{1} {a}_{2}"
			},
			"show_editor": false,
			"output": {
				"type": "html",
				"content": "<div id=\"ot25\"><h5 id=\"latex-protection\">LaTex protection</h5>\n<p>LaTeX content may contain text that could be interpreted as Markdown, e.g., <code>$ {a}_{1} {a}_{2} $</code></p>\n<p>Those are protected and rendered as LaTeX <span><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>a</mi><mn>1</mn></msub><msub><mi>a</mi><mn>2</mn></msub></mrow><annotation encoding=\"application/x-tex\"> {a}_{1} {a}_{2} </annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height: 0.58056em; vertical-align: -0.15em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathdefault\">a</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height: 0.301108em;\"><span class=\"\" style=\"top: -2.55em; margin-right: 0.05em;\"><span class=\"pstrut\" style=\"height: 2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height: 0.15em;\"><span class=\"\"></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathdefault\">a</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height: 0.301108em;\"><span class=\"\" style=\"top: -2.55em; margin-right: 0.05em;\"><span class=\"pstrut\" style=\"height: 2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">2</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height: 0.15em;\"><span class=\"\"></span></span></span></span></span></span></span></span></span></span> instead of Markdown {a}<em>{1} {a}</em>{2}</p>\n</div>"
			}
		},
		"cell24": {
			"input": {
				"type": "markdown",
				"source": "##### Code Execution\n\nCode is executed in an `iframe sandbox`, by one of below engines, based on `Switch` setting:\n\n* [eval5](https://github.com/bplok20010/eval5), a js interperter implemented in js, this is the default engine. it runs javascript in a seperate `context`\n* `eval is evil`, but there're situations when performance is too slow using a js interperter, like Monte Carlo Simulation. Using `eval` directly can speed things up, e.g. [Discrete Hedging](#quantlib/discretehedging.json), you may run with both engines and see the performance difference.\n\n**Warning**: it's risky to use `eval`, only use it when it's abusolutely necessary\n"
			},
			"show_editor": false,
			"output": {
				"type": "html",
				"content": "<div id=\"ot24\"><h5 id=\"code-execution\">Code Execution</h5>\n<p>Code is executed in an <code>iframe sandbox</code>, by one of below engines, based on <code>Switch</code> setting:</p>\n<ul>\n<li><a target=\"_blank\" href=\"https://github.com/bplok20010/eval5\">eval5</a>, a js interperter implemented in js, this is the default engine. it runs javascript in a seperate <code>context</code></li>\n<li><code>eval is evil</code>, but there're situations when performance is too slow using a js interperter, like Monte Carlo Simulation. Using <code>eval</code> directly can speed things up, e.g. <a target=\"_blank\" href=\"#quantlib/discretehedging.json\">Discrete Hedging</a>, you may run with both engines and see the performance difference.</li>\n</ul>\n<p><strong>Warning</strong>: it's risky to use <code>eval</code>, only use it when it's abusolutely necessary</p>\n</div>"
			}
		},
		"cell28": {
			"input": {
				"type": "markdown",
				"source": "##### JavaScript vs TypeScript\n\nIf setting <i class=\"fa fa-toggle-on\"></i> is on, code will be transpile by `typescript` (target=ES5) first, then feed to interperter. \n\n* In most cases, `ES5` javascript code should be enough, you may loose `var` to run in `un-restricted` mode, please refer to below example\n* Use `typescript` when you need `OOP` features like `inheritance`, or `ES6+` features, e.g. [Discrete Hedging](#quantlib/discretehedging.json)"
			},
			"show_editor": false,
			"output": {
				"type": "html",
				"content": "<div id=\"ot28\"><h5 id=\"javascript-vs-typescript\">JavaScript vs TypeScript</h5>\n<p>If setting <i class=\"fa fa-toggle-on\"></i> is on, code will be transpile by <code>typescript</code> (target=ES5) first, then feed to interperter. </p>\n<ul>\n<li>In most cases, <code>ES5</code> javascript code should be enough, you may loose <code>var</code> to run in <code>un-restricted</code> mode, please refer to below example</li>\n<li>Use <code>typescript</code> when you need <code>OOP</code> features like <code>inheritance</code>, or <code>ES6+</code> features, e.g. <a target=\"_blank\" href=\"#quantlib/discretehedging.json\">Discrete Hedging</a></li>\n</ul>\n</div>"
			}
		},
		"cell29": {
			"input": {
				"type": "markdown",
				"source": "##### Render API\n* last evaluated expression goes to cell output\n  * object will be displayed as \\[object, object\\]\n  * we're planning to add more smart rendering features, so you don't need to call render api direclty\n* use `print()` for primitive data type, like `number` or `string`\n  * it can be called multiple times in a cell, results are appended to cell output\n* use `table()` for tabular data\n  * only Array of objects are supported\n  * objects need to have same properties\n  * uses bootstrap table class, which fills entire cell output\n  * it can be called multiple times in a cell, but this might change in the future\n* use `plot()` to render chart. we use [plotly](https://plot.ly/javascript/) library, chart is svg format\n  * svg chart will take entire cell output\n  * multiple plots in a cell is not supported\n  * do not use `plot` with other render API"
			},
			"show_editor": false,
			"output": {
				"type": "html",
				"content": "<div id=\"ot29\"><h5 id=\"render-api\">Render API</h5>\n<ul>\n<li>last evaluated expression goes to cell output<ul>\n<li>object will be displayed as [object, object]</li>\n<li>we're planning to add more smart rendering features, so you don't need to call render api direclty</li>\n</ul>\n</li>\n<li>use <code>print()</code> for primitive data type, like <code>number</code> or <code>string</code><ul>\n<li>it can be called multiple times in a cell, results are appended to cell output</li>\n</ul>\n</li>\n<li>use <code>table()</code> for tabular data<ul>\n<li>only Array of objects are supported</li>\n<li>objects need to have same properties</li>\n<li>uses bootstrap table class, which fills entire cell output</li>\n<li>it can be called multiple times in a cell, but this might change in the future</li>\n</ul>\n</li>\n<li>use <code>plot()</code> to render chart. we use <a target=\"_blank\" href=\"https://plot.ly/javascript/\">plotly</a> library, chart is svg format<ul>\n<li>svg chart will take entire cell output</li>\n<li>multiple plots in a cell is not supported</li>\n<li>do not use <code>plot</code> with other render API</li>\n</ul>\n</li>\n</ul>\n</div>"
			}
		},
		"cell4": {
			"input": {
				"type": "markdown",
				"source": "#### Example\nbelow is an example of using quantlib.js to price/plot an option.\n\nFirst, setup `evaluation` date:"
			},
			"show_editor": false,
			"output": {
				"type": "html",
				"content": "<div id=\"ot4\"><h4 id=\"example\">Example</h4>\n<p>below is an example of using quantlib.js to price/plot an option.</p>\n<p>First, setup <code>evaluation</code> date:</p>\n</div>"
			}
		},
		"cell3": {
			"input": {
				"type": "javascript",
				"source": "today = DateExt.UTC('7,March,2014');\nSettings.evaluationDate.set(today);\ntoday"
			},
			"show_editor": true,
			"output": {
				"type": "html",
				"content": "<div id=\"ot3\"><code>3/7/2014</code></div>"
			}
		},
		"cell5": {
			"input": {
				"type": "markdown",
				"source": "##### The Option\nBuilding the option requires only specification of its contract. Market data will be selected and processed later, depending on the calcuation methods."
			},
			"show_editor": false,
			"output": {
				"type": "html",
				"content": "<div id=\"ot5\"><h5 id=\"the-option\">The Option</h5>\n<p>Building the option requires only specification of its contract. Market data will be selected and processed later, depending on the calcuation methods.</p>\n</div>"
			}
		},
		"cell6": {
			"input": {
				"type": "javascript",
				"source": "option = new EuropeanOption(\n  new PlainVanillaPayoff(Option.Type.Call, 100.0),\n  new EuropeanExercise(DateExt.UTC('7,June,2014'))\n)"
			},
			"show_editor": true,
			"output": {
				"type": "html",
				"content": "<div id=\"ot6\"><code>[object Object]</code></div>"
			}
		},
		"cell7": {
			"input": {
				"type": "markdown",
				"source": "##### Black-Scholes\nThe different pricing methods are implemented as pricing engines holding the required market data. Quoted market data. We'll assume flat risk-free rate and volatility."
			},
			"show_editor": false,
			"output": {
				"type": "html",
				"content": "<div id=\"ot7\"><h5 id=\"black-scholes\">Black-Scholes</h5>\n<p>The different pricing methods are implemented as pricing engines holding the required market data. Quoted market data. We'll assume flat risk-free rate and volatility.</p>\n</div>"
			}
		},
		"cell8": {
			"input": {
				"type": "javascript",
				"source": "u = new SimpleQuote(100.0);"
			},
			"show_editor": true,
			"output": {
				"type": "html",
				"content": "<div id=\"ot8\"><code>[object Object]</code></div>"
			}
		},
		"cell9": {
			"input": {
				"type": "javascript",
				"source": "r = new SimpleQuote(0.01);"
			},
			"show_editor": true,
			"output": {
				"type": "html",
				"content": "<div id=\"ot9\"><code>[object Object]</code></div>"
			}
		},
		"cell10": {
			"input": {
				"type": "javascript",
				"source": "sigma = new SimpleQuote(0.2);"
			},
			"show_editor": true,
			"output": {
				"type": "html",
				"content": "<div id=\"ot10\"><code>[object Object]</code></div>"
			}
		},
		"cell11": {
			"input": {
				"type": "markdown",
				"source": "The market data are encapsulated in a process object."
			},
			"show_editor": false,
			"output": {
				"type": "html",
				"content": "<div id=\"ot11\"><p>The market data are encapsulated in a process object.</p>\n</div>"
			}
		},
		"cell12": {
			"input": {
				"type": "javascript",
				"source": "riskFreeCurve = new FlatForward().ffInit3(0, new TARGET(), new Handle(r), new Actual360())"
			},
			"show_editor": true,
			"output": {
				"type": "html",
				"content": "<div id=\"ot12\"><code>[object Object]</code></div>"
			}
		},
		"cell13": {
			"input": {
				"type": "javascript",
				"source": "volatility = new BlackConstantVol().bcvInit4(0, new TARGET(), new Handle(sigma), new Actual360())"
			},
			"show_editor": true,
			"output": {
				"type": "html",
				"content": "<div id=\"ot13\"><code>[object Object]</code></div>"
			}
		},
		"cell14": {
			"input": {
				"type": "javascript",
				"source": "process = new BlackScholesProcess(\n  new Handle(u),\n  new Handle(riskFreeCurve),\n  new Handle(volatility)\n)"
			},
			"show_editor": true,
			"output": {
				"type": "html",
				"content": "<div id=\"ot14\"><code>[object Object]</code></div>"
			}
		},
		"cell15": {
			"input": {
				"type": "markdown",
				"source": "Finally, the process is used to build the engine."
			},
			"show_editor": false,
			"output": {
				"type": "html",
				"content": "<div id=\"ot15\"><p>Finally, the process is used to build the engine.</p>\n</div>"
			}
		},
		"cell16": {
			"input": {
				"type": "javascript",
				"source": "engine = new AnalyticEuropeanEngine().init1(process)"
			},
			"show_editor": true,
			"output": {
				"type": "html",
				"content": "<div id=\"ot16\"><code>[object Object]</code></div>"
			}
		},
		"cell17": {
			"input": {
				"type": "javascript",
				"source": "option.setPricingEngine(engine)"
			},
			"show_editor": true,
			"output": {
				"type": "html",
				"content": "<div id=\"ot17\"><code>undefined</code></div>"
			}
		},
		"cell18": {
			"input": {
				"type": "javascript",
				"source": "npv = option.NPV()"
			},
			"show_editor": true,
			"output": {
				"type": "html",
				"content": "<div id=\"ot18\"><code>4.155543462156206</code></div>"
			}
		},
		"cell19": {
			"input": {
				"type": "markdown",
				"source": "##### Market changes\nThe option is notified when any of the data changes"
			},
			"show_editor": false,
			"output": {
				"type": "html",
				"content": "<div id=\"ot19\"><h5 id=\"market-changes\">Market changes</h5>\n<p>The option is notified when any of the data changes</p>\n</div>"
			}
		},
		"cell20": {
			"input": {
				"type": "javascript",
				"source": "x = new Array(400), y = new Array(400);\n\nfor (var i = 0; i < 400; i++) {\n    x[i] = 80 + i / 10;\n    u.setValue(80 + i / 10);\n    y[i] = option.NPV();\n }\n\nline = {x: x, y: y, type: 'scatter'};\nlayout = {\n    title: 'Option Value', showlegend: false\n};\ndata = [line];\n\nplot(data, layout);"
			},
			"show_editor": true,
			"output": {
				"type": "html",
				"content": "<div id=\"ot20\" class=\"js-plotly-plot\"><div class=\"plot-container plotly\"><div class=\"svg-container\" style=\"position: relative; width: 100%; height: 450px;\"><svg class=\"main-svg\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"835.542\" height=\"450\" style=\"background: rgb(25, 29, 33);\"><defs id=\"defs-d068fb\"><g class=\"clips\"><clipPath id=\"clipd068fbxyplot\" class=\"plotclip\"><rect width=\"676\" height=\"270\"></rect></clipPath><clipPath class=\"axesclip\" id=\"clipd068fbx\"><rect x=\"80\" y=\"0\" width=\"676\" height=\"450\"></rect></clipPath><clipPath class=\"axesclip\" id=\"clipd068fby\"><rect x=\"0\" y=\"100\" width=\"835.542\" height=\"270\"></rect></clipPath><clipPath class=\"axesclip\" id=\"clipd068fbxy\"><rect x=\"80\" y=\"100\" width=\"676\" height=\"270\"></rect></clipPath></g><g class=\"gradients\"></g></defs><g class=\"bglayer\"></g><g class=\"draglayer cursor-crosshair\"><g class=\"xy\"><rect class=\"nsewdrag drag\" data-subplot=\"xy\" x=\"80\" y=\"100\" width=\"676\" height=\"270\" style=\"fill: transparent; stroke-width: 0; pointer-events: all;\"></rect><rect class=\"nwdrag drag cursor-nw-resize\" data-subplot=\"xy\" x=\"60\" y=\"80\" width=\"20\" height=\"20\" style=\"fill: transparent; stroke-width: 0; pointer-events: all;\"></rect><rect class=\"nedrag drag cursor-ne-resize\" data-subplot=\"xy\" x=\"756\" y=\"80\" width=\"20\" height=\"20\" style=\"fill: transparent; stroke-width: 0; pointer-events: all;\"></rect><rect class=\"swdrag drag cursor-sw-resize\" data-subplot=\"xy\" x=\"60\" y=\"370\" width=\"20\" height=\"20\" style=\"fill: transparent; stroke-width: 0; pointer-events: all;\"></rect><rect class=\"sedrag drag cursor-se-resize\" data-subplot=\"xy\" x=\"756\" y=\"370\" width=\"20\" height=\"20\" style=\"fill: transparent; stroke-width: 0; pointer-events: all;\"></rect><rect class=\"ewdrag drag cursor-ew-resize\" data-subplot=\"xy\" x=\"147.60000000000002\" y=\"370.5\" width=\"540.8000000000001\" height=\"20\" style=\"fill: transparent; stroke-width: 0; pointer-events: all;\"></rect><rect class=\"wdrag drag cursor-w-resize\" data-subplot=\"xy\" x=\"80\" y=\"370.5\" width=\"67.60000000000001\" height=\"20\" style=\"fill: transparent; stroke-width: 0; pointer-events: all;\"></rect><rect class=\"edrag drag cursor-e-resize\" data-subplot=\"xy\" x=\"688.4\" y=\"370.5\" width=\"67.60000000000001\" height=\"20\" style=\"fill: transparent; stroke-width: 0; pointer-events: all;\"></rect><rect class=\"nsdrag drag cursor-ns-resize\" data-subplot=\"xy\" x=\"59.5\" y=\"127\" width=\"20\" height=\"216\" style=\"fill: transparent; stroke-width: 0; pointer-events: all;\"></rect><rect class=\"sdrag drag cursor-s-resize\" data-subplot=\"xy\" x=\"59.5\" y=\"343\" width=\"20\" height=\"27\" style=\"fill: transparent; stroke-width: 0; pointer-events: all;\"></rect><rect class=\"ndrag drag cursor-n-resize\" data-subplot=\"xy\" x=\"59.5\" y=\"100\" width=\"20\" height=\"27\" style=\"fill: transparent; stroke-width: 0; pointer-events: all;\"></rect></g></g><g class=\"layer-below\"><g class=\"imagelayer\"></g><g class=\"shapelayer\"></g></g><g class=\"cartesianlayer\"><g class=\"subplot xy\"><g class=\"layer-subplot\"><g class=\"shapelayer\"></g><g class=\"imagelayer\"></g></g><g class=\"gridlayer\"><g class=\"x\"><path class=\"xgrid crisp\" transform=\"translate(164.70999999999998,0)\" d=\"M0,100v270\" style=\"stroke: rgb(29, 33, 36); stroke-opacity: 1; stroke-width: 1px;\"></path><path class=\"xgrid crisp\" transform=\"translate(249.42,0)\" d=\"M0,100v270\" style=\"stroke: rgb(29, 33, 36); stroke-opacity: 1; stroke-width: 1px;\"></path><path class=\"xgrid crisp\" transform=\"translate(334.14,0)\" d=\"M0,100v270\" style=\"stroke: rgb(29, 33, 36); stroke-opacity: 1; stroke-width: 1px;\"></path><path class=\"xgrid crisp\" transform=\"translate(418.85,0)\" d=\"M0,100v270\" style=\"stroke: rgb(29, 33, 36); stroke-opacity: 1; stroke-width: 1px;\"></path><path class=\"xgrid crisp\" transform=\"translate(503.56,0)\" d=\"M0,100v270\" style=\"stroke: rgb(29, 33, 36); stroke-opacity: 1; stroke-width: 1px;\"></path><path class=\"xgrid crisp\" transform=\"translate(588.27,0)\" d=\"M0,100v270\" style=\"stroke: rgb(29, 33, 36); stroke-opacity: 1; stroke-width: 1px;\"></path><path class=\"xgrid crisp\" transform=\"translate(672.98,0)\" d=\"M0,100v270\" style=\"stroke: rgb(29, 33, 36); stroke-opacity: 1; stroke-width: 1px;\"></path></g><g class=\"y\"><path class=\"ygrid crisp\" transform=\"translate(0,297.08000000000004)\" d=\"M80,0h676\" style=\"stroke: rgb(29, 33, 36); stroke-opacity: 1; stroke-width: 1px;\"></path><path class=\"ygrid crisp\" transform=\"translate(0,237.11)\" d=\"M80,0h676\" style=\"stroke: rgb(29, 33, 36); stroke-opacity: 1; stroke-width: 1px;\"></path><path class=\"ygrid crisp\" transform=\"translate(0,177.13)\" d=\"M80,0h676\" style=\"stroke: rgb(29, 33, 36); stroke-opacity: 1; stroke-width: 1px;\"></path><path class=\"ygrid crisp\" transform=\"translate(0,117.16)\" d=\"M80,0h676\" style=\"stroke: rgb(29, 33, 36); stroke-opacity: 1; stroke-width: 1px;\"></path></g></g><g class=\"zerolinelayer\"><path class=\"yzl zl crisp\" transform=\"translate(0,357.06)\" d=\"M80,0h676\" style=\"stroke: rgb(68, 68, 68); stroke-opacity: 1; stroke-width: 1px;\"></path></g><path class=\"xlines-below\"></path><path class=\"ylines-below\"></path><g class=\"overlines-below\"></g><g class=\"xaxislayer-below\"></g><g class=\"yaxislayer-below\"></g><g class=\"overaxes-below\"></g><g class=\"plot\" transform=\"translate(80, 100)\" clip-path=\"url('#clipd068fbxyplot')\"><g class=\"scatterlayer mlayer\"><g class=\"trace scatter trace1351bd\" style=\"stroke-miterlimit: 2; opacity: 1;\"><g class=\"fills\"></g><g class=\"errorbars\"></g><g class=\"lines\"><path class=\"js-line\" d=\"M0,256.5L69.46,254.96L71.16,254.9L116.9,252.58L118.6,252.46L160.95,248.75L162.65,248.57L199.92,243.63L201.61,243.36L233.8,237.53L235.5,237.19L269.38,229.28L271.08,228.84L303.27,219.52L304.96,218.98L333.76,209.1L335.46,208.47L364.26,197.15L365.95,196.44L396.45,182.94L398.15,182.15L435.42,163.72L437.11,162.84L474.39,142.55L476.08,141.59L518.44,116.68L520.13,115.65L577.73,79.35L579.43,78.25L642.12,36.6L643.81,35.45L676,13.5\" style=\"vector-effect: non-scaling-stroke; fill: none; stroke: rgb(31, 119, 180); stroke-opacity: 1; stroke-width: 2px; opacity: 1;\"></path></g><g class=\"points\"></g><g class=\"text\"></g></g></g></g><g class=\"overplot\"></g><path class=\"xlines-above crisp\" d=\"M0,0\" style=\"fill: none;\"></path><path class=\"ylines-above crisp\" d=\"M0,0\" style=\"fill: none;\"></path><g class=\"overlines-above\"></g><g class=\"xaxislayer-above\"><g class=\"xtick\"><text text-anchor=\"middle\" x=\"0\" y=\"383\" data-unformatted=\"80\" data-math=\"N\" transform=\"translate(80,0)\" style=\"font-family: &quot;Open Sans&quot;, verdana, arial, sans-serif; font-size: 12px; fill: rgb(68, 68, 68); fill-opacity: 1; white-space: pre;\">80</text></g><g class=\"xtick\"><text text-anchor=\"middle\" x=\"0\" y=\"383\" data-unformatted=\"85\" data-math=\"N\" transform=\"translate(164.70999999999998,0)\" style=\"font-family: &quot;Open Sans&quot;, verdana, arial, sans-serif; font-size: 12px; fill: rgb(68, 68, 68); fill-opacity: 1; white-space: pre;\">85</text></g><g class=\"xtick\"><text text-anchor=\"middle\" x=\"0\" y=\"383\" data-unformatted=\"90\" data-math=\"N\" transform=\"translate(249.42,0)\" style=\"font-family: &quot;Open Sans&quot;, verdana, arial, sans-serif; font-size: 12px; fill: rgb(68, 68, 68); fill-opacity: 1; white-space: pre;\">90</text></g><g class=\"xtick\"><text text-anchor=\"middle\" x=\"0\" y=\"383\" data-unformatted=\"95\" data-math=\"N\" transform=\"translate(334.14,0)\" style=\"font-family: &quot;Open Sans&quot;, verdana, arial, sans-serif; font-size: 12px; fill: rgb(68, 68, 68); fill-opacity: 1; white-space: pre;\">95</text></g><g class=\"xtick\"><text text-anchor=\"middle\" x=\"0\" y=\"383\" data-unformatted=\"100\" data-math=\"N\" transform=\"translate(418.85,0)\" style=\"font-family: &quot;Open Sans&quot;, verdana, arial, sans-serif; font-size: 12px; fill: rgb(68, 68, 68); fill-opacity: 1; white-space: pre;\">100</text></g><g class=\"xtick\"><text text-anchor=\"middle\" x=\"0\" y=\"383\" data-unformatted=\"105\" data-math=\"N\" transform=\"translate(503.56,0)\" style=\"font-family: &quot;Open Sans&quot;, verdana, arial, sans-serif; font-size: 12px; fill: rgb(68, 68, 68); fill-opacity: 1; white-space: pre;\">105</text></g><g class=\"xtick\"><text text-anchor=\"middle\" x=\"0\" y=\"383\" data-unformatted=\"110\" data-math=\"N\" transform=\"translate(588.27,0)\" style=\"font-family: &quot;Open Sans&quot;, verdana, arial, sans-serif; font-size: 12px; fill: rgb(68, 68, 68); fill-opacity: 1; white-space: pre;\">110</text></g><g class=\"xtick\"><text text-anchor=\"middle\" x=\"0\" y=\"383\" data-unformatted=\"115\" data-math=\"N\" transform=\"translate(672.98,0)\" style=\"font-family: &quot;Open Sans&quot;, verdana, arial, sans-serif; font-size: 12px; fill: rgb(68, 68, 68); fill-opacity: 1; white-space: pre;\">115</text></g></g><g class=\"yaxislayer-above\"><g class=\"ytick\"><text text-anchor=\"end\" x=\"79\" y=\"4.199999999999999\" data-unformatted=\"0\" data-math=\"N\" transform=\"translate(0,357.06)\" style=\"font-family: &quot;Open Sans&quot;, verdana, arial, sans-serif; font-size: 12px; fill: rgb(68, 68, 68); fill-opacity: 1; white-space: pre;\">0</text></g><g class=\"ytick\"><text text-anchor=\"end\" x=\"79\" y=\"4.199999999999999\" data-unformatted=\"5\" data-math=\"N\" transform=\"translate(0,297.08000000000004)\" style=\"font-family: &quot;Open Sans&quot;, verdana, arial, sans-serif; font-size: 12px; fill: rgb(68, 68, 68); fill-opacity: 1; white-space: pre;\">5</text></g><g class=\"ytick\"><text text-anchor=\"end\" x=\"79\" y=\"4.199999999999999\" data-unformatted=\"10\" data-math=\"N\" transform=\"translate(0,237.11)\" style=\"font-family: &quot;Open Sans&quot;, verdana, arial, sans-serif; font-size: 12px; fill: rgb(68, 68, 68); fill-opacity: 1; white-space: pre;\">10</text></g><g class=\"ytick\"><text text-anchor=\"end\" x=\"79\" y=\"4.199999999999999\" data-unformatted=\"15\" data-math=\"N\" transform=\"translate(0,177.13)\" style=\"font-family: &quot;Open Sans&quot;, verdana, arial, sans-serif; font-size: 12px; fill: rgb(68, 68, 68); fill-opacity: 1; white-space: pre;\">15</text></g><g class=\"ytick\"><text text-anchor=\"end\" x=\"79\" y=\"4.199999999999999\" data-unformatted=\"20\" data-math=\"N\" transform=\"translate(0,117.16)\" style=\"font-family: &quot;Open Sans&quot;, verdana, arial, sans-serif; font-size: 12px; fill: rgb(68, 68, 68); fill-opacity: 1; white-space: pre;\">20</text></g></g><g class=\"overaxes-above\"></g></g></g><g class=\"polarlayer\"></g><g class=\"ternarylayer\"></g><g class=\"geolayer\"></g><g class=\"funnelarealayer\"></g><g class=\"pielayer\"></g><g class=\"treemaplayer\"></g><g class=\"sunburstlayer\"></g><g class=\"glimages\"></g></svg><div class=\"gl-container\"></div><svg class=\"main-svg\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"835.542\" height=\"450\"><defs id=\"topdefs-d068fb\"><g class=\"clips\"></g></defs><g class=\"indicatorlayer\"></g><g class=\"layer-above\"><g class=\"imagelayer\"></g><g class=\"shapelayer\"></g></g><g class=\"infolayer\"><g class=\"g-gtitle\"><text class=\"gtitle\" x=\"417.771\" y=\"50\" text-anchor=\"middle\" dy=\"0em\" data-unformatted=\"Option Value\" data-math=\"N\" style=\"font-family: &quot;Open Sans&quot;, verdana, arial, sans-serif; font-size: 17px; fill: rgb(68, 68, 68); opacity: 1; font-weight: normal; white-space: pre;\">Option Value</text></g><g class=\"g-xtitle\"></g><g class=\"g-ytitle\"></g></g><g class=\"menulayer\"></g><g class=\"zoomlayer\"></g></svg><div class=\"modebar-container\" style=\"position: absolute; top: 0px; right: 0px; width: 100%;\"><div id=\"modebar-d068fb\" class=\"modebar modebar--hover ease-bg\"><div class=\"modebar-group\"><a rel=\"tooltip\" class=\"modebar-btn\" data-title=\"Download plot as a png\" data-toggle=\"false\" data-gravity=\"n\"><svg viewBox=\"0 0 1000 1000\" class=\"icon\" height=\"1em\" width=\"1em\"><path d=\"m500 450c-83 0-150-67-150-150 0-83 67-150 150-150 83 0 150 67 150 150 0 83-67 150-150 150z m400 150h-120c-16 0-34 13-39 29l-31 93c-6 15-23 28-40 28h-340c-16 0-34-13-39-28l-31-94c-6-15-23-28-40-28h-120c-55 0-100-45-100-100v-450c0-55 45-100 100-100h800c55 0 100 45 100 100v450c0 55-45 100-100 100z m-400-550c-138 0-250 112-250 250 0 138 112 250 250 250 138 0 250-112 250-250 0-138-112-250-250-250z m365 380c-19 0-35 16-35 35 0 19 16 35 35 35 19 0 35-16 35-35 0-19-16-35-35-35z\" transform=\"matrix(1 0 0 -1 0 850)\"></path></svg></a></div><div class=\"modebar-group\"><a rel=\"tooltip\" class=\"modebar-btn active\" data-title=\"Zoom\" data-attr=\"dragmode\" data-val=\"zoom\" data-toggle=\"false\" data-gravity=\"n\"><svg viewBox=\"0 0 1000 1000\" class=\"icon\" height=\"1em\" width=\"1em\"><path d=\"m1000-25l-250 251c40 63 63 138 63 218 0 224-182 406-407 406-224 0-406-182-406-406s183-406 407-406c80 0 155 22 218 62l250-250 125 125z m-812 250l0 438 437 0 0-438-437 0z m62 375l313 0 0-312-313 0 0 312z\" transform=\"matrix(1 0 0 -1 0 850)\"></path></svg></a><a rel=\"tooltip\" class=\"modebar-btn\" data-title=\"Pan\" data-attr=\"dragmode\" data-val=\"pan\" data-toggle=\"false\" data-gravity=\"n\"><svg viewBox=\"0 0 1000 1000\" class=\"icon\" height=\"1em\" width=\"1em\"><path d=\"m1000 350l-187 188 0-125-250 0 0 250 125 0-188 187-187-187 125 0 0-250-250 0 0 125-188-188 186-187 0 125 252 0 0-250-125 0 187-188 188 188-125 0 0 250 250 0 0-126 187 188z\" transform=\"matrix(1 0 0 -1 0 850)\"></path></svg></a></div><div class=\"modebar-group\"><a rel=\"tooltip\" class=\"modebar-btn\" data-title=\"Zoom in\" data-attr=\"zoom\" data-val=\"in\" data-toggle=\"false\" data-gravity=\"n\"><svg viewBox=\"0 0 875 1000\" class=\"icon\" height=\"1em\" width=\"1em\"><path d=\"m1 787l0-875 875 0 0 875-875 0z m687-500l-187 0 0-187-125 0 0 187-188 0 0 125 188 0 0 187 125 0 0-187 187 0 0-125z\" transform=\"matrix(1 0 0 -1 0 850)\"></path></svg></a><a rel=\"tooltip\" class=\"modebar-btn\" data-title=\"Zoom out\" data-attr=\"zoom\" data-val=\"out\" data-toggle=\"false\" data-gravity=\"n\"><svg viewBox=\"0 0 875 1000\" class=\"icon\" height=\"1em\" width=\"1em\"><path d=\"m0 788l0-876 875 0 0 876-875 0z m688-500l-500 0 0 125 500 0 0-125z\" transform=\"matrix(1 0 0 -1 0 850)\"></path></svg></a><a rel=\"tooltip\" class=\"modebar-btn\" data-title=\"Autoscale\" data-attr=\"zoom\" data-val=\"auto\" data-toggle=\"false\" data-gravity=\"n\"><svg viewBox=\"0 0 1000 1000\" class=\"icon\" height=\"1em\" width=\"1em\"><path d=\"m250 850l-187 0-63 0 0-62 0-188 63 0 0 188 187 0 0 62z m688 0l-188 0 0-62 188 0 0-188 62 0 0 188 0 62-62 0z m-875-938l0 188-63 0 0-188 0-62 63 0 187 0 0 62-187 0z m875 188l0-188-188 0 0-62 188 0 62 0 0 62 0 188-62 0z m-125 188l-1 0-93-94-156 156 156 156 92-93 2 0 0 250-250 0 0-2 93-92-156-156-156 156 94 92 0 2-250 0 0-250 0 0 93 93 157-156-157-156-93 94 0 0 0-250 250 0 0 0-94 93 156 157 156-157-93-93 0 0 250 0 0 250z\" transform=\"matrix(1 0 0 -1 0 850)\"></path></svg></a><a rel=\"tooltip\" class=\"modebar-btn\" data-title=\"Reset axes\" data-attr=\"zoom\" data-val=\"reset\" data-toggle=\"false\" data-gravity=\"n\"><svg viewBox=\"0 0 928.6 1000\" class=\"icon\" height=\"1em\" width=\"1em\"><path d=\"m786 296v-267q0-15-11-26t-25-10h-214v214h-143v-214h-214q-15 0-25 10t-11 26v267q0 1 0 2t0 2l321 264 321-264q1-1 1-4z m124 39l-34-41q-5-5-12-6h-2q-7 0-12 3l-386 322-386-322q-7-4-13-4-7 2-12 7l-35 41q-4 5-3 13t6 12l401 334q18 15 42 15t43-15l136-114v109q0 8 5 13t13 5h107q8 0 13-5t5-13v-227l122-102q5-5 6-12t-4-13z\" transform=\"matrix(1 0 0 -1 0 850)\"></path></svg></a></div><div class=\"modebar-group\"><a rel=\"tooltip\" class=\"modebar-btn\" data-title=\"Toggle Spike Lines\" data-attr=\"_cartesianSpikesEnabled\" data-val=\"on\" data-toggle=\"false\" data-gravity=\"n\"><svg viewBox=\"0 0 1000 1000\" class=\"icon\" height=\"1em\" width=\"1em\"><path d=\"M512 409c0-57-46-104-103-104-57 0-104 47-104 104 0 57 47 103 104 103 57 0 103-46 103-103z m-327-39l92 0 0 92-92 0z m-185 0l92 0 0 92-92 0z m370-186l92 0 0 93-92 0z m0-184l92 0 0 92-92 0z\" transform=\"matrix(1.5 0 0 -1.5 0 850)\"></path></svg></a><a rel=\"tooltip\" class=\"modebar-btn\" data-title=\"Show closest data on hover\" data-attr=\"hovermode\" data-val=\"closest\" data-toggle=\"false\" data-gravity=\"ne\"><svg viewBox=\"0 0 1500 1000\" class=\"icon\" height=\"1em\" width=\"1em\"><path d=\"m375 725l0 0-375-375 375-374 0-1 1125 0 0 750-1125 0z\" transform=\"matrix(1 0 0 -1 0 850)\"></path></svg></a><a rel=\"tooltip\" class=\"modebar-btn active\" data-title=\"Compare data on hover\" data-attr=\"hovermode\" data-val=\"x\" data-toggle=\"false\" data-gravity=\"ne\"><svg viewBox=\"0 0 1125 1000\" class=\"icon\" height=\"1em\" width=\"1em\"><path d=\"m187 786l0 2-187-188 188-187 0 0 937 0 0 373-938 0z m0-499l0 1-187-188 188-188 0 0 937 0 0 376-938-1z\" transform=\"matrix(1 0 0 -1 0 850)\"></path></svg></a></div></div></div><svg class=\"main-svg\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"835.542\" height=\"450\"><g class=\"hoverlayer\"></g></svg></div></div></div>"
			}
		}
	}
}